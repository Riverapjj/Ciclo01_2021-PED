#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace prototipo_PED
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PROYECTO")]
	public partial class Conexion : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertSolicitud(Solicitud instance);
    partial void UpdateSolicitud(Solicitud instance);
    partial void DeleteSolicitud(Solicitud instance);
    partial void InsertMesa(Mesa instance);
    partial void UpdateMesa(Mesa instance);
    partial void DeleteMesa(Mesa instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertClase(Clase instance);
    partial void UpdateClase(Clase instance);
    partial void DeleteClase(Clase instance);
    #endregion
		
		public Conexion() : 
				base(global::prototipo_PED.Properties.Settings.Default.PROYECTOConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public Conexion(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Conexion(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Conexion(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Conexion(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Solicitud> Solicitud
		{
			get
			{
				return this.GetTable<Solicitud>();
			}
		}
		
		public System.Data.Linq.Table<Mesa> Mesa
		{
			get
			{
				return this.GetTable<Mesa>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estado
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<Clase> Clase
		{
			get
			{
				return this.GetTable<Clase>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_solicitudes")]
		public ISingleResult<sp_solicitudesResult> sp_solicitudes()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_solicitudesResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nombre;
		
		private string _Documento;
		
		private string _Correo;
		
		private string _Telefono;
		
		private EntitySet<Solicitud> _Solicitud;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDocumentoChanging(string value);
    partial void OnDocumentoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Usuario()
		{
			this._Solicitud = new EntitySet<Solicitud>(new Action<Solicitud>(this.attach_Solicitud), new Action<Solicitud>(this.detach_Solicitud));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Documento", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Documento
		{
			get
			{
				return this._Documento;
			}
			set
			{
				if ((this._Documento != value))
				{
					this.OnDocumentoChanging(value);
					this.SendPropertyChanging();
					this._Documento = value;
					this.SendPropertyChanged("Documento");
					this.OnDocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Char(9) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Solicitud", Storage="_Solicitud", ThisKey="ID", OtherKey="ID_Usuario")]
		public EntitySet<Solicitud> Solicitud
		{
			get
			{
				return this._Solicitud;
			}
			set
			{
				this._Solicitud.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Solicitud(Solicitud entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Solicitud(Solicitud entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Solicitud")]
	public partial class Solicitud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Fecha;
		
		private System.TimeSpan _Hora;
		
		private int _ID_Usuario;
		
		private int _ID_Mesa;
		
		private int _ID_Estado;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Mesa> _Mesa;
		
		private EntityRef<Estado> _Estado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnHoraChanging(System.TimeSpan value);
    partial void OnHoraChanged();
    partial void OnID_UsuarioChanging(int value);
    partial void OnID_UsuarioChanged();
    partial void OnID_MesaChanging(int value);
    partial void OnID_MesaChanged();
    partial void OnID_EstadoChanging(int value);
    partial void OnID_EstadoChanged();
    #endregion
		
		public Solicitud()
		{
			this._Usuario = default(EntityRef<Usuario>);
			this._Mesa = default(EntityRef<Mesa>);
			this._Estado = default(EntityRef<Estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hora", DbType="Time NOT NULL")]
		public System.TimeSpan Hora
		{
			get
			{
				return this._Hora;
			}
			set
			{
				if ((this._Hora != value))
				{
					this.OnHoraChanging(value);
					this.SendPropertyChanging();
					this._Hora = value;
					this.SendPropertyChanged("Hora");
					this.OnHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Usuario", DbType="Int NOT NULL")]
		public int ID_Usuario
		{
			get
			{
				return this._ID_Usuario;
			}
			set
			{
				if ((this._ID_Usuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Usuario = value;
					this.SendPropertyChanged("ID_Usuario");
					this.OnID_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Mesa", DbType="Int NOT NULL")]
		public int ID_Mesa
		{
			get
			{
				return this._ID_Mesa;
			}
			set
			{
				if ((this._ID_Mesa != value))
				{
					if (this._Mesa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MesaChanging(value);
					this.SendPropertyChanging();
					this._ID_Mesa = value;
					this.SendPropertyChanged("ID_Mesa");
					this.OnID_MesaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Estado", DbType="Int NOT NULL")]
		public int ID_Estado
		{
			get
			{
				return this._ID_Estado;
			}
			set
			{
				if ((this._ID_Estado != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_EstadoChanging(value);
					this.SendPropertyChanging();
					this._ID_Estado = value;
					this.SendPropertyChanged("ID_Estado");
					this.OnID_EstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Solicitud", Storage="_Usuario", ThisKey="ID_Usuario", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Solicitud.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Solicitud.Add(this);
						this._ID_Usuario = value.ID;
					}
					else
					{
						this._ID_Usuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mesa_Solicitud", Storage="_Mesa", ThisKey="ID_Mesa", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Mesa Mesa
		{
			get
			{
				return this._Mesa.Entity;
			}
			set
			{
				Mesa previousValue = this._Mesa.Entity;
				if (((previousValue != value) 
							|| (this._Mesa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mesa.Entity = null;
						previousValue.Solicitud.Remove(this);
					}
					this._Mesa.Entity = value;
					if ((value != null))
					{
						value.Solicitud.Add(this);
						this._ID_Mesa = value.ID;
					}
					else
					{
						this._ID_Mesa = default(int);
					}
					this.SendPropertyChanged("Mesa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Solicitud", Storage="_Estado", ThisKey="ID_Estado", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Solicitud.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Solicitud.Add(this);
						this._ID_Estado = value.ID;
					}
					else
					{
						this._ID_Estado = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mesa")]
	public partial class Mesa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Clase;
		
		private EntitySet<Solicitud> _Solicitud;
		
		private EntityRef<Clase> _Clase;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_ClaseChanging(int value);
    partial void OnID_ClaseChanged();
    #endregion
		
		public Mesa()
		{
			this._Solicitud = new EntitySet<Solicitud>(new Action<Solicitud>(this.attach_Solicitud), new Action<Solicitud>(this.detach_Solicitud));
			this._Clase = default(EntityRef<Clase>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Clase", DbType="Int NOT NULL")]
		public int ID_Clase
		{
			get
			{
				return this._ID_Clase;
			}
			set
			{
				if ((this._ID_Clase != value))
				{
					if (this._Clase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ClaseChanging(value);
					this.SendPropertyChanging();
					this._ID_Clase = value;
					this.SendPropertyChanged("ID_Clase");
					this.OnID_ClaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mesa_Solicitud", Storage="_Solicitud", ThisKey="ID", OtherKey="ID_Mesa")]
		public EntitySet<Solicitud> Solicitud
		{
			get
			{
				return this._Solicitud;
			}
			set
			{
				this._Solicitud.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clase_Mesa", Storage="_Clase", ThisKey="ID_Clase", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Clase Clase
		{
			get
			{
				return this._Clase.Entity;
			}
			set
			{
				Clase previousValue = this._Clase.Entity;
				if (((previousValue != value) 
							|| (this._Clase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clase.Entity = null;
						previousValue.Mesa.Remove(this);
					}
					this._Clase.Entity = value;
					if ((value != null))
					{
						value.Mesa.Add(this);
						this._ID_Clase = value.ID;
					}
					else
					{
						this._ID_Clase = default(int);
					}
					this.SendPropertyChanged("Clase");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Solicitud(Solicitud entity)
		{
			this.SendPropertyChanging();
			entity.Mesa = this;
		}
		
		private void detach_Solicitud(Solicitud entity)
		{
			this.SendPropertyChanging();
			entity.Mesa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Estado1;
		
		private EntitySet<Solicitud> _Solicitud;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEstado1Changing(string value);
    partial void OnEstado1Changed();
    #endregion
		
		public Estado()
		{
			this._Solicitud = new EntitySet<Solicitud>(new Action<Solicitud>(this.attach_Solicitud), new Action<Solicitud>(this.detach_Solicitud));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Estado", Storage="_Estado1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Estado1
		{
			get
			{
				return this._Estado1;
			}
			set
			{
				if ((this._Estado1 != value))
				{
					this.OnEstado1Changing(value);
					this.SendPropertyChanging();
					this._Estado1 = value;
					this.SendPropertyChanged("Estado1");
					this.OnEstado1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Solicitud", Storage="_Solicitud", ThisKey="ID", OtherKey="ID_Estado")]
		public EntitySet<Solicitud> Solicitud
		{
			get
			{
				return this._Solicitud;
			}
			set
			{
				this._Solicitud.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Solicitud(Solicitud entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Solicitud(Solicitud entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clase")]
	public partial class Clase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nombre;
		
		private int _Capacidad;
		
		private EntitySet<Mesa> _Mesa;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCapacidadChanging(int value);
    partial void OnCapacidadChanged();
    #endregion
		
		public Clase()
		{
			this._Mesa = new EntitySet<Mesa>(new Action<Mesa>(this.attach_Mesa), new Action<Mesa>(this.detach_Mesa));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacidad", DbType="Int NOT NULL")]
		public int Capacidad
		{
			get
			{
				return this._Capacidad;
			}
			set
			{
				if ((this._Capacidad != value))
				{
					this.OnCapacidadChanging(value);
					this.SendPropertyChanging();
					this._Capacidad = value;
					this.SendPropertyChanged("Capacidad");
					this.OnCapacidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clase_Mesa", Storage="_Mesa", ThisKey="ID", OtherKey="ID_Clase")]
		public EntitySet<Mesa> Mesa
		{
			get
			{
				return this._Mesa;
			}
			set
			{
				this._Mesa.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mesa(Mesa entity)
		{
			this.SendPropertyChanging();
			entity.Clase = this;
		}
		
		private void detach_Mesa(Mesa entity)
		{
			this.SendPropertyChanging();
			entity.Clase = null;
		}
	}
	
	public partial class sp_solicitudesResult
	{
		
		private int _Mesa;
		
		private string _Usuario;
		
		private System.TimeSpan _Hora;
		
		private System.DateTime _Fecha;
		
		private string _Estado;
		
		public sp_solicitudesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mesa", DbType="Int NOT NULL")]
		public int Mesa
		{
			get
			{
				return this._Mesa;
			}
			set
			{
				if ((this._Mesa != value))
				{
					this._Mesa = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this._Usuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hora", DbType="Time NOT NULL")]
		public System.TimeSpan Hora
		{
			get
			{
				return this._Hora;
			}
			set
			{
				if ((this._Hora != value))
				{
					this._Hora = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this._Fecha = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this._Estado = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
